image:
  Visual Studio 2015

environment:
  COVERALLS_REPO_TOKEN:
    secure: pC5gv/PNQxgAiwVFw2EGKSRmYT73YMCWykI/pQxxBgBfjp+WTDf6Puqtb3pW+wJB

  matrix:
    - GENERATOR: "Visual Studio 12 2013"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 12 2013"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 12 2013 Win64"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 12 2013 Win64"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 14 2015"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 14 2015"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 14 2015 Win64"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 14 2015 Win64"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 15 2017"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 15 2017"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 15 2017 Win64"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 15 2017 Win64"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 16 2019"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 16 2019"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 16 2019 Win64"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 16 2019 Win64"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 17 2022"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 17 2022"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "Visual Studio 17 2022 Win64"
      PLATFORM: MSVC
      CONFIG: Debug

    - GENERATOR: "Visual Studio 17 2022 Win64"
      PLATFORM: MSVC
      CONFIG: Release

    - GENERATOR: "MinGW Makefiles"
      PLATFORM: MinGW-w64
      CONFIG: Debug

    - GENERATOR: "MinGW Makefiles"
      PLATFORM: MinGW-w64
      CONFIG: Release

    - GENERATOR: "Visual Studio 14 2015"
      PLATFORM: CLang
      CONFIG: Debug

    - GENERATOR: "Visual Studio 14 2015"
      PLATFORM: CLang
      CONFIG: Release

install:
  - if [%PLATFORM%]==[MinGW-w64] rename "C:\Program Files\Git\usr\bin\sh.exe" "sh2.exe"
  - ps: If ($Env:PLATFORM -eq 'MinGW-w64') { (New-Object Net.WebClient).DownloadFile("http://downloads.sourceforge.net/mingw-w64/Toolchains%20targetting%20Win32/Personal%20Builds/mingw-builds/4.8.5/threads-win32/sjlj/i686-4.8.5-release-win32-sjlj-rt_v4-rev0.7z", "$env:APPVEYOR_BUILD_FOLDER\mw32.7z") }
  - if [%PLATFORM%]==[MinGW-w64] 7z x -oC:\ mw32.7z > NUL
  - if [%PLATFORM%]==[MinGW-w64] set PATH=C:\mingw32\bin;%PATH%
  - ps: If ($Env:PLATFORM -eq 'MinGW-w64') { (New-Object Net.WebClient).DownloadFile("https://github.com/ninja-build/ninja/releases/download/v1.7.2/ninja-win.zip", "$env:APPVEYOR_BUILD_FOLDER\ninja.zip") }
  - if [%PLATFORM%]==[MinGW-w64] 7z x -oC:\mingw32\bin ninja.zip > NUL
  - if [%PLATFORM%]==[CLang] set PATH="C:\Program Files\LLVM\bin";%PATH%
  - if [%PLATFORM%]==[CLang] clang-cl -v
  - if [%PLATFORM%]==[MinGW-w64] python -m ensurepip
  - if [%PLATFORM%]==[MinGW-w64] python -m pip install cpp-coveralls

build_script:
  - mkdir build
  - cd build
  - if [%PLATFORM%]==[CLang] cmake -G "%GENERATOR%" -T"LLVM-vs2014" ..
  - if [%PLATFORM%]==[MSVC] cmake -G "%GENERATOR%" ..
  - if [%PLATFORM%]==[MinGW-w64] cmake -G "MinGW Makefiles" -DCMAKE_BUILD_TYPE="%CONFIG%" ..
  - if [%PLATFORM%]==[MinGW-w64] (cmake --build . --config "%CONFIG%") else (cmake --build . --config "%CONFIG%" --target ALL_BUILD -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll")

test_script:
  - if [%PLATFORM%]==[MinGW-w64] (cmake --build . --config "%CONFIG%" --target tests) else (cmake --build . --config "%CONFIG%" --target tests -- /logger:"C:\Program Files\AppVeyor\BuildAgent\Appveyor.MSBuildLogger.dll")
  - ctest -VV --build-config "%CONFIG%" --no-compress-output --output-on-failure -T Test

on_finish:
  - ps: |
      $files = Get-ChildItem ".\tests_xml"
      
      for ($i=0; $i -lt $files.Count; $i++)
      {
          $wc = New-Object 'System.Net.WebClient'
          $wc.UploadFile("https://ci.appveyor.com/api/testresults/junit/$($env:APPVEYOR_JOB_ID)", (Resolve-Path $files[$i].FullName))
      }

      if ($env:PLATFORM -eq 'MinGW-w64' -and $env:CONFIG -eq 'Debug')
      {
          Start-Process coveralls.exe -ArgumentList "-r .. -e tests -e ext -e cen -x cpp -x hpp" -Wait
      }
